version: '3.8'

services:
  postgres:
    image: postgres:16
    container_name: workout-postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: workout_tracker
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - workout-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  mongo:
    image: mongo:7
    container_name: workout-mongo
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongo
      MONGO_INITDB_ROOT_PASSWORD: mongo
      MONGO_INITDB_DATABASE: workout_logs
    volumes:
      - mongo-data:/data/db
    networks:
      - workout-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      timeout: 5s
      retries: 5

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: workout-api
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/workout_tracker?schema=public
      - MONGODB_URI=mongodb://mongo:mongo@mongo:27017/workout_logs?authSource=admin
    depends_on:
      postgres:
        condition: service_healthy
      mongo:
        condition: service_healthy
    volumes:
      - ./:/app
      - /app/node_modules
    networks:
      - workout-network
    command: sh -c "sleep 5 && npm run migrate:prod && npm run dev"
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  workout-network:
    driver: bridge

volumes:
  postgres-data:
  mongo-data:
